package com.esprit.app;


import com.codename1.db.Database;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.esprit.app.gui.FormSignIn;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    public static Resources theme;
    public static Database myDataBase;
    
 
    public void init(Object context) {
        
        try {
            
            myDataBase = Database.openOrCreate("kd");
            
            myDataBase.execute("CREATE TABLE IF NOT EXISTS utilisateur ( id INTEGER PRIMARY KEY AUTOINCREMENT, "
                    + "nom TEXT, email TEXT, login TEXT, password TEXT, age TEXT, role TEXT)");
            
        } catch (IOException ex) {  
            System.out.println(ex.getMessage());
        }
        
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });   
        
        current = new FormSignIn();
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
